    1  pwd
    2  ls
    3  mkdir W205
    4  ls
    5  cd W205
    6  pwd
    7  ls
    8  git clone https://github.com/mids-w205-schioberg/course-content.git
    9  ls
   10  git clone git@github.com:mids-w205-schioberg/project-1-FuriousGeorge19.git
   11  ls
   12  git clone git@github.com:mids-w205-schioberg/project-1-FuriousGeorge19.git
   13  git clone https://github.com/mids-w205-schioberg/project-1-FuriousGeorge19.git
   14  ls
   15  cd proj*
   16  ls
   17  git branch
   18  git branch assignment
   19  git checkout assignment
   20  ls
   21  git branch
   22  git push
   23  git push --set-upstream origin assignment
   24  ls
   25  cd W205
   26  pwd
   27  curl -L -o annot_fpid.json https://goo.gl/qWiu7d
   28  curl -L -o lp_data.csv https://goo.gl/FDFPYB
   29  ls
   30  head lp_data.csv
   31  tail lp_data.csv
   32  head -5 lp_data.csv
   33  head -1 lp_data.csv
   34  cat lp_data.csv | wc -l
   35  cat lp_data.csv | sort
   36  man sort
   37  cat lp_data.csv | sort -n
   38  cat lp_data.csv | sort -n -g
   39  cat lp_data.csv | sort -g
   40  cat annot_fpid.json ~ wc -l
   41  cat annot_fpid.json | ~ wc -l
   42  cat annot_fpid.json | wc -l
   43  jq
   44  cat annot_fpid.json | jq .
   45  cat annot_fpid.json | jq '.[][]'
   46  cat annot_fpid.json | jq '.[][]' -r
   47  cat annot_fpid.json | jq '.[][]' -r | sort | uniq -c
   48  cat annot_fpid.json | jq '.[][]' -r | sort | uniq -c | sort -n
   49  cat annot_fpid.json | jq '.[][]' -r | sort | uniq -c | sort -nr
   50  cat annot_fpid.json | jq '.[][]' -r | sort | uniq -c | sort -nr | head -10
   51  bq query 'SELECT count(*) FROM `bigquery-public-data.san_francisco.bikeshare_trips`'
   52  bq query --use_legacy_sql=false 'SELECT count(*) FROM `bigquery-public-data.san_francisco.bikeshare_status`'
   53  bq query --use_legacy_sql=false 'SELECT count(distinct_station_id) FROM `bigquery-public-data.san_francisco.bikeshare_status`'
   54  bq query --use_legacy_sql=false 'SELECT count(distinct station_id) FROM `bigquery-public-data.san_francisco.bikeshare_status`; SELECT start_station_name, end_station_name, count(*) as TotalCount
   55  FROM  `bigquery-public-data.san_francisco.bikeshare_trips` 
   56  GROUP by start_station_name,end_station_name
   57  ORDER by TotalCount Desc
   58  LIMIT 1' 
   59  bq query --use_legacy_sql=false 'SELECT count(distinct station_id) FROM `bigquery-public-data.san_francisco.bikeshare_status`; SELECT start_station_name, end_station_name, count(*) as TotalCount
   60  FROM  `bigquery-public-data.san_francisco.bikeshare_trips` 
   61  GROUP by start_station_name,end_station_name
   62  ORDER by TotalCount Desc
   63  LIMIT 1' 
   64  bq query --use_legacy_sql=false 'SELECT count(distinct station_id) FROM `bigquery-public-data.san_francisco.bikeshare_status`; SELECT start_station_name, end_station_name, count(*) as TotalCount
   65  FROM  `bigquery-public-data.san_francisco.bikeshare_trips` 
   66  GROUP by start_station_name,end_station_name
   67  ORDER by TotalCount Desc
   68  q
   69  ~/.bashrc
   70  ~/
   71  cd ..
   72  ls -al
   73  ls
   74  cd jupyter
   75  ls
   76  cd W205
   77  pwd
   78  LS
   79  ls
   80  cd proj*
   81  ls
   82  ls -al
   83  git branch
   84  ls -al
   85  vi README.md
   86  ls -al
   87  git fetch
   88  git status
   89  git branch
   90  git checkout master
   91  git branch
   92  git checkout assignment
   93  git branch
   94  git push
   95  ls
   96  cd W205
   97  ls
   98  cd proj*
   99  ls
  100  sudo apt update
  101  sudo apt install nano
  102  ls -al
  103  nano README.md
  104  vim README.md
  105  git branch
  106  git add README.md
  107  git commit -m "1st update to README.md"
  108  git config --global user.email "joe.mirza@gmail.com"
  109  git config --global user.name "Joe Mirza"
  110  git commit -m "1st update to README.md"
  111  git push origin assignment
  112  nano README.md
  113  git add README.md
  114  git commit -m "2nd update to README.md"
  115  git push origin assignment
  116  nano README.md
  117  git add README.md
  118  git commit -m "3rd update to README.md"
  119  git push origin assignment
  120  nano README.md
  121  git add README.md
  122  git commit -m "Correct timezone error."
  123  git push origin assignment
  124  vi README.MD
  125  ls
  126  vim README.MD
  127  nano README.md
  128  git add README.md
  129  git commit -m "More cleanup on Part 1 of Project"
  130  git push origin assignment
  131  bq query --use_legacy_sql=false ' SELECT COUNT (*)
  132  FROM `bigquery-public-data.san_francisco.bikeshare_trips`'
  133  bq query --use_legacy_sql=false ' SELECT COUNT (*) as Trips
  134  FROM `bigquery-public-data.san_francisco.bikeshare_trips`
  135  bq query --use_legacy_sql=false ' SELECT COUNT (*) as Trips
  136  FROM `bigquery-public-data.san_francisco.bikeshare_trips`'
  137  SELECT MIN(start_date), MAX(end_date)
  138  FROM `bigquery-public-data.san_francisco.bikeshare_trips`;
  139  bq query --use_legacy_sql=false 'SELECT MIN(start_date) AS First, MAX(end_date) AS Last  FROM `bigquery-public-data.san_francisco.bikeshare_trips`;'
  140  bq query --use_legacy_sql=false 'SELECT MIN(start_date) AS First, MAX(end_date) AS Last  FROM `bigquery-public-data.san_
  141  ls
  142  cat MinMax.txt
  143  nano MinMax.txt
  144  bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bike_IDs
  145  FROM `bigquery-public-data.san_francisco.bikeshare_trips`;
  146  bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bike_IDs
  147  FROM `bigquery-public-data.san_francisco.bikeshare_trips`;
  148  bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bikes FROM `bigquery-public-data.san_francisco.bikeshare_trips`;
  149  $ bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bike_IDs FROM `bigquery-public-data.san_francisco.bikeshare_trips`;
  150  ,
  151  a
  152  $ bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bike_IDs FROM `bigquery-public-data.san_francisco.bikeshare_trips`
  153  '
  154  $ bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bike_IDs FROM `bigquery-public-data.san_francisco.bikeshare_trips`'
  155  bq query --use_legacy_sql=false 'SELECT COUNT (DISTINCT bike_number) AS  Unique_Bike_IDs FROM `bigquery-public-data.san_francisco.bikeshare_trips`'
  156  bq query --use_legacy_sql=false 'SELECT
  157    Morning,
  158    Afternoon,
  159    Total - Morning - Afternoon AS Other,
  160    Total
  161    FROM
  162    (
  163      SELECT
  164        COUNT(trip_id) as Total,
  165        COUNT(IF( EXTRACT(HOUR FROM DATETIME_TRUNC(DATETIME(start_date), HOUR)) BETWEEN 5 AND 11, trip_id, NULL)) AS Morning,
  166        COUNT(IF( EXTRACT(HOUR FROM DATETIME_TRUNC(DATETIME(start_date), HOUR)) BETWEEN 12 AND 15, trip_id, NULL)) AS Afternoon
  167      FROM
  168        `bigquery-public-data.san_francisco.bikeshare_trips`
  169    ) AS x'
  170  | Morning | Afternoon | Other  | Total  |
  171  |:-------:|-----------|--------|--------|
  172  ls
  173  cd w205
  174  ls
  175  cd flask-with-kafka/
  176  ls
  177  docker-compose up -d
  178  docker-compose exec spark env PYSPARK_DRIVER_PYTHON=jupyter PYSPARK_DRIVER_PYTHON_OPTS='notebook --no-browser --port 8888 --ip 0.0.0.0 --allow-root --notebook-dir=/w205/' pyspark 
  179  cd w205
  180  ls
  181  cd project-2-FuriousGeorge19/
  182  ls
  183  docker-compose ps
  184  docker-compose exec spark env PYSPARK_DRIVER_PYTHON=jupyter PYSPARK_DRIVER_PYTHON_OPTS='notebook --no-browser --port 8888 --ip 0.0.0.0 --allow-root --notebook-dir=/w205/' pyspark 
  185  docker-compose down
  186  docker-compose up -d
  187  docker-compose exec cloudera hadoop fs -ls /tmp/
  188  docker-compose down
  189  ls
  190  docker-compose up -d
  191  docker-compose exec cloudera hadoop fs -ls /tmp/
  192  docker-compose exec mids bash -c "cat /w205/project-2-FuriousGeorge19/assessments.json | jq '.[]' -c | kafkacat -P -b kafka:29092 -t assessments"
  193  docker-compose exec spark env PYSPARK_DRIVER_PYTHON=jupyter PYSPARK_DRIVER_PYTHON_OPTS='notebook --no-browser --port 8888 --ip 0.0.0.0 --allow-root --notebook-dir=/w205/' pyspark 
  194  git add project2v2.ipynb 
  195  git commit -m "Cleaned up notebook, final queries"
  196  git push origin assignment
  197  vim docker-compose.yml 
  198  git status
  199  git fetchfetch
  200  fit fetch
  201  git fetch
  202  git add docker-compose.yml 
  203  git add project2v2.ipynb 
  204  git add project2.ipynb 
  205  git commit -m "Update work"
  206  git branch
  207  git push origin assignment
  208  history>jupyter@tensorflow-2-1-20200826-192353-history.txt
  209  ls
  210  vim jupyter@tensorflow-2-1-20200826-192353
  211  whoami
  212  $SUDO_USER
  213  history> jupyter-history.txt
